[project]
name = "mockroo-api"
version = "0.1.0"
description = "Mockaroo fake data generator requests api for python"
authors = [{ name = "mrxsierra", email = "sunilsharma9@outlook.com" }]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["mockaroo", "fake data", "data generation", "api"]

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.12"
dependencies = [
    "requests>=2.32.3,<3.0.0",
]

[project.urls]
Repository = "https://github.com/mrxsierra/mockaroo-api"

[project.scripts]
mockaroo = "main:main"

[dependency-groups]
dev = [
    "ruff>=0.11.5",
]

[tool.ruff]
target-version = "py312"
# Set the maximum line length to 79.
# line-length = 88

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
# extend-select = ["E501"]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "B9",
    "SIM",   # flake8-simplify
    "PIE",   # flake8-pie
    "PGH",   # pygrep-hooks
    "PYI",   # flake8-pyi
    "RUF",
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]